scalar DateTime

directive @goField(
  forceResolver: Boolean
  name: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

directive @hasEmailVerified(
  status: EmailVerificationStatus!
) on FIELD_DEFINITION
directive @hasLoggedIn on FIELD_DEFINITION | OBJECT

interface Connection {
  pageInfo: PageInfo!
  edges: [Edge!]!
}

interface Edge {
  cursor: String!
  node: Node!
}

interface Node {
  id: ID!
}

type PageInfo {
  startCursor: String
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

interface Error {
  message: String!
}

type Room {
  id: String!
  entrie: Entrie!
}

type Entrie {
  user: User!
}

type Message {
  content: String
  applicant: Applicant
  user: User!
  createdAt: DateTime!
}

type Query {
  # node
  node(id: ID!): Node

  # stock

  # room
  getViewerRooms: [Room!]!

  # entrie
  getEntrieUser(roomId: String!): User!

  # message
  getRoomMessages(roomId: String!): [Message!]!
}

input applicantInput {
  message: String!
}

input createMessageInput {
  content: String!
}

type Mutation {
  # recruitment_tags
  addRecruitmentTag(tagId: String!, recruitmentId: String!): Boolean!

  # applicant

  # message
  createMessage(roomId: String!, input: createMessageInput!): Message!
}
