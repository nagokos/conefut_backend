extend type Query {
  getCurrentUser: User
}

enum Role {
  ADMIN
  GENERAL
}

enum EmailVerificationStatus {
  PENDING
  VERIFIED
}

type User implements Node {
  id: ID!
  databaseId: Int
  name: String!
  email: String!
  role: Role!
  avatar: String!
  introduction: String
  emailVerificationStatus: EmailVerificationStatus!
}

extend type Mutation {
  createUser(input: CreateUserInput!): User!
  loginUser(input: LoginUserInput!): User!
  logoutUser: Boolean!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input LoginUserInput {
  email: String!
  password: String!
}
